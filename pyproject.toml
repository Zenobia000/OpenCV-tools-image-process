[tool.poetry]
name = "opencv-computer-vision-toolkit"
version = "0.1.0"
description = "A comprehensive learning platform for computer vision and image processing with OpenCV"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
license = "MIT"
packages = [{include = "utils"}]
package-mode = false
homepage = "https://github.com/your-username/OpenCV-tools-image-process"
repository = "https://github.com/your-username/OpenCV-tools-image-process"
documentation = "https://github.com/your-username/OpenCV-tools-image-process/blob/main/README.md"
keywords = ["opencv", "computer-vision", "image-processing", "machine-learning", "education"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[tool.poetry.dependencies]
python = "^3.10"
opencv-python = ">=4.8.0"
opencv-contrib-python = ">=4.8.0"
numpy = ">=1.21.0"
matplotlib = ">=3.5.0"
scipy = ">=1.9.0"
pillow = ">=9.0.0"
pandas = ">=1.4.0"
scikit-learn = ">=1.1.0"
scikit-image = ">=0.19.0"
imutils = ">=0.5.4"
tqdm = ">=4.64.0"
jupyter = ">=1.0.0"
ipywidgets = ">=7.7.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.0.0"
pytest-cov = ">=4.0.0"
pytest-mock = ">=3.10.0"
black = ">=22.0.0"
flake8 = ">=4.0.0"
isort = ">=5.10.0"
mypy = ">=0.990"

[tool.poetry.group.docs.dependencies]
sphinx = ">=5.0.0"
sphinx-rtd-theme = ">=1.0.0"
myst-parser = ">=0.18.0"

[tool.poetry.group.ml.dependencies]
# Optional: Uncomment if you need deep learning frameworks
# tensorflow = ">=2.10.0"
# torch = ">=1.12.0"
# torchvision = ">=0.13.0"
# ultralytics = ">=8.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "unit: Unit tests for individual functions",
    "integration: Integration tests for module interactions",
    "slow: Tests that take longer to execute",
]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | OpenCV
)/
'''

[tool.isort]
profile = "black"
line_length = 88
skip_gitignore = true
known_first_party = ["utils"]
skip = ["OpenCV", ".venv", "venv", "cv_env"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = [
    "^OpenCV/",
    "^tests/",
    "^\\.venv/",
]

[tool.coverage.run]
source = ["utils"]
omit = [
    "*/tests/*",
    "*/OpenCV/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
